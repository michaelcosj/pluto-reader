// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.543
package component

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/michaelcosj/pluto-reader/view/icon"

func Sidebar() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"sidebar-container\"><div class=\"z-50 sidebar absolute top-0 left-0 h-screen w-16 bg-primary text-background py-2 px-4 transition-all duration-300 delay-75 ease-in\"><div class=\"top\"><div class=\"logo h-12 w-full flex gap-1.5 items-center opacity-0\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icon.Atom().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<span class=\"inline-block\"><p class=\"text-lg\">Pluto Reader</p></span></div><button id=\"sidebar-open-btn\" type=\"button\" class=\"absolute top-5 left-1/2 -translate-x-1/2 inline-flex justify-center items-center px-0.5 py-0.5 rounded hover:text-accent hover:bg-background transition-all delay-75 duration-200\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icon.Atom().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</button> <button id=\"sidebar-close-btn\" type=\"button\" class=\"absolute top-5 left-[88%] -translate-x-1/2 hidden inline-flex justify-center items-center px-0.5 py-0.5 rounded hover:text-accent hover:bg-background transition-all delay-300 duration-200\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icon.ChevronLeft().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</button></div><ul class=\"menu my-12 transition-all delay-200 duration-700\"><li class=\"my-4 h-12 w-[90%] relative group\"><a href=\"#\" class=\"flex gap-1.5 items-center px-0.5 py-1 rounded hover:text-accent hover:bg-background\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icon.BellDot().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<span class=\"inline-block\"><p>Unread</p></span></a> <span class=\"tooltip opacity-0 group-hover:opacity-100 absolute left-20 top-1 bg-text text-background translate-1/2 shadow-md rounded-xl py-0.5 px-3 z-50\">Unread</span></li><li class=\"my-4 h-12 w-[90%] relative group\"><a href=\"#\" class=\"flex gap-1.5 items-center px-0.5 py-1 rounded hover:text-accent hover:bg-background\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icon.RSS().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<span class=\"inline-block\"><p>All</p></span></a> <span class=\"tooltip opacity-0 group-hover:opacity-100 absolute left-20 top-1 bg-text text-background translate-1/2 shadow-md rounded-xl py-0.5 px-3 z-50\">All</span></li><li class=\"my-4 h-12 w-[90%] relative group\"><a href=\"#\" class=\"flex gap-1.5 items-center px-0.5 py-1 rounded hover:text-accent hover:bg-background\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icon.Bookmark().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<span class=\"inline-block\"><p>Bookmarks</p></span></a> <span class=\"tooltip opacity-0 group-hover:opacity-100 absolute left-20 top-1 bg-text text-background translate-1/2 shadow-md rounded-xl py-0.5 px-3 z-50\">Bookmarks</span></li><li class=\"my-4 h-12 w-[90%] relative group\"><div class=\"flex gap-1.5 items-center px-0.5 py-1 rounded hover:text-accent hover:bg-background\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = icon.Library().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<span class=\"inline-block\"><p>Collections</p></span> <span class=\"tooltip opacity-0 group-hover:opacity-100 absolute left-20 top-1 bg-text text-background translate-1/2 shadow-md rounded-xl py-0.5 px-3 z-50\">Collections</span></div></li></ul></div><div class=\"main-content relative transition-all delay-100 duration-500 h-screen\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templ_7745c5c3_Var1.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></div><style type=\"text/css\">\n        .sidebar.active {\n            width: 14rem;\n        }\n\n\t\t.main-content {\n            left: 4rem;\n            width: calc(100% - 4rem);\n\t\t}\n\n        @media (min-width:768px){\n\t\t    .sidebar.active ~ .main-content {\n                left: 14rem;\n                width: calc(100% - 14rem);\n\t\t    }\n        }\n\n        .sidebar.active .top .logo {\n            opacity: 1;\n        }\n\n        .sidebar p {\n           opacity: 0;\n           transition-property: opacity;\n           transition-duration: 150ms;\n           transition-delay: 300ms;\n        }\n\n        .sidebar.active p {\n           opacity: 1;\n        }\n\n        .sidebar.active ul li .tooltip {\n            display: none;\n        }\n\t</style><script>\n        let sidebar = document.querySelector(\".sidebar\")\n        let sidebarOpenBtn = document.querySelector(\"#sidebar-open-btn\")\n        let sidebarCloseBtn = document.querySelector(\"#sidebar-close-btn\")\n        \n        sidebarOpenBtn.onclick = function() {\n            sidebarCloseBtn.classList.remove('hidden')\n            sidebarOpenBtn.classList.add('hidden')\n            sidebar.classList.add('active')\n        }\n    \n        sidebarCloseBtn.onclick = function() {\n            sidebarCloseBtn.classList.add('hidden')\n            sidebarOpenBtn.classList.remove('hidden')\n            sidebar.classList.remove('active')\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
